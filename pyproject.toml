# Copyright 2023-2025 Canonical Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[project]
name = "slurm-charms"
version = "0.0"
requires-python = "==3.12.*"
dependencies = [
    "ops ~= 2.19",
    "slurmutils<2.0.0,>=1.1.1",
    "influxdb==5.3.2",
    "netifaces-plus==0.12.4",
    "nvidia-ml-py==12.560.30",
    "rpds-py ~= 0.23.1",
    "cosl < 1.0.0,>= 0.0.50",
    "hpc-libs[all]",
    "slurm-ops",
]

[project.optional-dependencies]
dev = [
    # Tests
    "ops[testing]~=2.19",
    "cryptography~=44.0.1",
    "distro==1.9.0",
    "python-dotenv~=1.1.1",
    "pycryptodome==3.20.0",
    "dbus-fast>=1.90.2",
    "pyfakefs==5.9.1",
    "coverage[toml]",

    # Integration
    "jubilant ~= 1.0",
    "pytest ~= 7.2",
    "pytest-mock ~= 3.14",
    "pytest-order ~= 1.3",
    "pytest-mock ~= 3.14",
    "tenacity ~= 8.2",

    # Linting
    "black",
    "ruff",
    "codespell",
    "pyright",

    # TiCS scan dependencies
    "flake8",
    "pylint",
    "pytest",
    "pyyaml",
]

[tool.uv.workspace]
members = [
    "charms/*",
    "pkgs/slurm-ops",
]

[tool.uv.sources]
slurm-ops = { workspace = true }
ubuntu-drivers-common = { git = "https://github.com/canonical/ubuntu-drivers-common", rev = "554b91edfd3699625dbed90f679abb31a897b76e" }
hpc-libs = { git = "https://github.com/dsloanm/hpc-libs", rev = "587c01a96541b518385fa2d397d07719eb6a8784" }

[tool.uv]
dependency-metadata = [{ name = "ubuntu-drivers-common", version = "0.10.0" }]

[tool.repository]
external-libraries = [
    { lib = "operator-libs-linux.apt", version = "0.16" },
    { lib = "operator-libs-linux.systemd", version = "1.4" },
    { lib = "data-platform-libs.data_interfaces", version = "0.41" },
    { lib = "grafana-agent.cos_agent", version = "0.20" },
    { lib = "filesystem-client.mount_info", version = "0.1" },
]
binary-packages = [
    "pydantic-core",
    "rpds-py",
    "cryptography"
]

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.coverage.paths]
source = ["charms", "*/_build"]

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"

# Spell checking tools configuration
[tool.codespell]
skip = "_build,lib,venv,icon.svg,.tox,.git,.mypy_cache,.ruff_cache,.pytest_cache,.vscode,.coverage,.venv,cover"

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

# Linting tools configuration
[tool.ruff]
line-length = 99
lint.select = ["E", "W", "F", "C", "N", "D", "I001"]
lint.extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]
lint.ignore = ["E501", "D107"]
lint.per-file-ignores = { "**/tests/*" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
] }
extend-exclude = ["__pycache__", "*.egg_info"]

[tool.ruff.lint.mccabe]
max-complexity = 15
